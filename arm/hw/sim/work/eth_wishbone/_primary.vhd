library verilog;
use verilog.vl_types.all;
entity eth_wishbone is
    generic(
        Tp              : integer := 1
    );
    port(
        WB_CLK_I        : in     vl_logic;
        WB_DAT_I        : in     vl_logic_vector(31 downto 0);
        WB_DAT_O        : out    vl_logic_vector(31 downto 0);
        WB_ADR_I        : in     vl_logic_vector(9 downto 2);
        WB_WE_I         : in     vl_logic;
        WB_ACK_O        : out    vl_logic;
        BDCs            : in     vl_logic_vector(3 downto 0);
        Reset           : in     vl_logic;
        m_wb_adr_o      : out    vl_logic_vector(29 downto 0);
        m_wb_sel_o      : out    vl_logic_vector(3 downto 0);
        m_wb_we_o       : out    vl_logic;
        m_wb_dat_o      : out    vl_logic_vector(31 downto 0);
        m_wb_dat_i      : in     vl_logic_vector(31 downto 0);
        m_wb_cyc_o      : out    vl_logic;
        m_wb_stb_o      : out    vl_logic;
        m_wb_ack_i      : in     vl_logic;
        m_wb_err_i      : in     vl_logic;
        MTxClk          : in     vl_logic;
        TxStartFrm      : out    vl_logic;
        TxEndFrm        : out    vl_logic;
        TxUsedData      : in     vl_logic;
        TxData          : out    vl_logic_vector(7 downto 0);
        TxRetry         : in     vl_logic;
        TxAbort         : in     vl_logic;
        TxUnderRun      : out    vl_logic;
        TxDone          : in     vl_logic;
        PerPacketCrcEn  : out    vl_logic;
        PerPacketPad    : out    vl_logic;
        MRxClk          : in     vl_logic;
        RxData          : in     vl_logic_vector(7 downto 0);
        RxValid         : in     vl_logic;
        RxStartFrm      : in     vl_logic;
        RxEndFrm        : in     vl_logic;
        RxAbort         : in     vl_logic;
        RxStatusWriteLatched_sync2: out    vl_logic;
        r_TxEn          : in     vl_logic;
        r_RxEn          : in     vl_logic;
        r_TxBDNum       : in     vl_logic_vector(7 downto 0);
        r_RxFlow        : in     vl_logic;
        r_PassAll       : in     vl_logic;
        TxB_IRQ         : out    vl_logic;
        TxE_IRQ         : out    vl_logic;
        RxB_IRQ         : out    vl_logic;
        RxE_IRQ         : out    vl_logic;
        Busy_IRQ        : out    vl_logic;
        InvalidSymbol   : in     vl_logic;
        LatchedCrcError : in     vl_logic;
        RxLateCollision : in     vl_logic;
        ShortFrame      : in     vl_logic;
        DribbleNibble   : in     vl_logic;
        ReceivedPacketTooBig: in     vl_logic;
        RxLength        : in     vl_logic_vector(15 downto 0);
        LoadRxStatus    : in     vl_logic;
        ReceivedPacketGood: in     vl_logic;
        AddressMiss     : in     vl_logic;
        ReceivedPauseFrm: in     vl_logic;
        RetryCntLatched : in     vl_logic_vector(3 downto 0);
        RetryLimit      : in     vl_logic;
        LateCollLatched : in     vl_logic;
        DeferLatched    : in     vl_logic;
        RstDeferLatched : out    vl_logic;
        CarrierSenseLost: in     vl_logic
    );
    attribute mti_svvh_generic_type : integer;
    attribute mti_svvh_generic_type of Tp : constant is 1;
end eth_wishbone;
